<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>python on amar</title><link>https://amarjandu.github.io/tags/python/</link><description>Recent content in python on amar</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 28 Feb 2022 18:48:23 -0800</lastBuildDate><atom:link href="https://amarjandu.github.io/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>doctests</title><link>https://amarjandu.github.io/posts/doctests/</link><pubDate>Mon, 28 Feb 2022 18:48:23 -0800</pubDate><guid>https://amarjandu.github.io/posts/doctests/</guid><description>Consider some small utility function such as:
def parse_string(input: str): try: name, value = input.split(&amp;#39;:&amp;#39;) except ValueError: name = input value = None assert name, input return name, value These utility functions typically have a small footprint, and they are usually tested by writing unittests for functions that call these small utility functions/method. Testing them directly within the test suite can be done, but if you start adding multiple files for multiple utility functions keeping track of the changes can become a chore.</description></item></channel></rss>